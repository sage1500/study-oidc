spring.application.name: apiclient
server.port: 8080
spring.main.banner-mode: off

## ログレベル
logging.level:
  com.example: DEBUG

## ログファイル
logging:
  file.name: /var/log/${spring.application.name}.log
  logback:
    rollingpolicy:
      file-name-pattern: ${LOG_FILE}.%d{yyyyMMddHHmm}.%i.log
      max-file-size: 10KB
      max-history: 3

## thymeleaf
spring.thymeleaf.mode: HTML

## サービス情報
services:
  auth:
    base-url: http://127.0.0.1:18080/auth
  hello:
    base-url: http://localhost:8081/api/v1
    client-registration-id: publicapp

## Spring Security (OAuth2クライアント)

# ※最小設定(Confidencial Client)
#spring.security.oauth2.client.registration:
#  demoapp:
#    provider: keycloak
#    client-id: demoapp
#    client-secret: 08c33835-c18c-4dd7-a7df-aee3479d17c4
#    scope: openid
#spring.security.oauth2.client.provider:
#  keycloak:
#    issuer-uri: http://localhost:18080/auth/realms/demo
#
# ※Frontあり(Confidencial Client)
# spring.security.oauth2.client:
#   registration:
#     demoapp:
#       provider: keycloak
#       client-id: demoapp
#       client-secret: 08c33835-c18c-4dd7-a7df-aee3479d17c4
#       #client-authentication-method:
#       authorization-grant-type: authorization_code
#       redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
#       scope: openid
#       #client-name:
#   provider:
#     keycloak:
#       authorization-uri: ${services.auth.base-url}/realms/demo/protocol/openid-connect/auth
#       token-uri: ${services.auth.base-url}/realms/demo/protocol/openid-connect/token
#       user-info-uri: ${services.auth.base-url}/realms/demo/protocol/openid-connect/userinfo
#       #user-info-authentication-method:
#       user-name-attribute: sub
#       jwk-set-uri: ${services.auth.base-url}/realms/demo/protocol/openid-connect/certs
#       #issuer-uri: ${services.auth.base-url}/realms/demo
#
# ※Frontあり(Public Client(PKCE))
spring.security.oauth2.client:
  registration:
    publicapp:
      provider: keycloak
      client-id: publicapp
      #client-secret:
      client-authentication-method: none
      authorization-grant-type: authorization_code
      redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
      scope: openid
      #client-name:
  provider:
    keycloak:
      authorization-uri: ${services.auth.base-url}/realms/demo/protocol/openid-connect/auth
      token-uri: ${services.auth.base-url}/realms/demo/protocol/openid-connect/token
      user-info-uri: ${services.auth.base-url}/realms/demo/protocol/openid-connect/userinfo
      #user-info-authentication-method:
      user-name-attribute: sub
      jwk-set-uri: ${services.auth.base-url}/realms/demo/protocol/openid-connect/certs
      #issuer-uri: ${services.auth.base-url}/realms/demo
